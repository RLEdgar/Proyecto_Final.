#ifndef INSCRIPCION
#define INSCRIPCION

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_EQUIPOS 10
#define MAX_JUGADORES 17
#define MIN_JUGADORES 11

typedef struct {
    char nombre[30];
    char posicion[15];
    int edad;
    int num_cuenta;
} Jugador;

typedef struct {
    char nombre[20];
    int num_jugadores;
    Jugador jugadores[MAX_JUGADORES];
} Equipo;

Equipo equipos[MAX_EQUIPOS];
int total_equipos = 0;

// Verifica si un equipo ya está registrado
int equipo_existe(char nombre[]) {
    for (int i = 0; i < total_equipos; i++) {
        if (strcmp(equipos[i].nombre, nombre) == 0) {
            return 1; // Equipo encontrado
        }
    }
    return 0; // Equipo no encontrado
}

// Función para registrar un equipo
void registrar_equipo() {
    if (total_equipos >= MAX_EQUIPOS) {
        printf("No se pueden registrar más equipos.\n");
        return;
    }

    char nombre_equipo[20];
    printf("Ingrese el nombre del equipo: ");
    fgets(nombre_equipo,sizeof(nombre_equipo),stdin); // Lee hasta 19 caracteres evitando desbordamientos

    if (equipo_existe(nombre_equipo)) {
        printf("Error: Ya existe un equipo con ese nombre.\n");
        return;
    }

    strcpy(equipos[total_equipos].nombre, nombre_equipo);
    equipos[total_equipos].num_jugadores = 0;
    total_equipos++;

    printf("Equipo '%s' registrado correctamente.\n", nombre_equipo);
}

// Función para registrar jugadores en un equipo
void registrar_jugadores() {
    char nombre_equipo[20];
    printf("Ingrese el nombre del equipo al que quiere agregar jugadores: ");
    fgets(nombre_equipo,sizeof(nombre_equipo),stdin);

    int equipo_index = -1;
    for (int i = 0; i < total_equipos; i++) {
        if (strcmp(equipos[i].nombre, nombre_equipo) == 0) {
            equipo_index = i;
            break;
        }
    }

    if (equipo_index == -1) {
        printf("Error: El equipo no existe.\n");
        return;
    }

    int num;
    printf("¿Cuántos jugadores desea registrar? (mínimo %d, máximo %d): ", MIN_JUGADORES, MAX_JUGADORES);
    scanf("%d", &num);

    if (num < MIN_JUGADORES || num > MAX_JUGADORES) {
        printf("Número de jugadores inválido.\n");
        return;
    }

    for (int i = 0; i < num; i++) {
        if (equipos[equipo_index].num_jugadores >= MAX_JUGADORES) {
            printf("El equipo ya tiene el máximo de jugadores.\n");
            break;
        }

        Jugador nuevo;
        printf("\nRegistrando jugador %d\n", i + 1);
        printf("Nombre: ");
        scanf(" %29[^\n]", nuevo.nombre);
        printf("Edad: ");
        scanf("%d", &nuevo.edad);
        printf("Número de cuenta: ");
        scanf("%d", &nuevo.num_cuenta);
        printf("Posición: ");
        scanf(" %14[^\n]", nuevo.posicion);

        equipos[equipo_index].jugadores[equipos[equipo_index].num_jugadores] = nuevo;
        equipos[equipo_index].num_jugadores++;
    }

    printf("Jugadores registrados correctamente en el equipo '%s'.\n", nombre_equipo);
}

// Función para mostrar equipos y jugadores
void mostrar_equipos() {
    if (total_equipos == 0) {
        printf("No hay equipos registrados.\n");
        return;
    }

    printf("\nEquipos registrados:\n");
    for (int i = 0; i < total_equipos; i++) {
        printf("%d. %s (Jugadores: %d)\n", i + 1, equipos[i].nombre, equipos[i].num_jugadores);
    }
}

// Menú principal
void altas_bajas() {
    int opcion;
    do {
        printf("\n--- MENU ---\n");
        printf("1. Registrar equipo\n");
        printf("2. Registrar jugadores\n");
        printf("3. Mostrar equipos\n");
        printf("4. Salir\n");
        printf("Seleccione una opción: ");
        scanf("%d", &opcion);

        switch (opcion) {
            case 1:
                registrar_equipo();
                break;
            case 2:
                registrar_jugadores();
                break;
            case 3:
                mostrar_equipos();
                break;
            case 4:
                printf("Regresando al menu principal...\n");
                break;
            default:
                printf("Opción no válida, intente de nuevo.\n");
        }
    } while (opcion != 4);
}

#endif
