#ifndef EMPAREJAMIENTO
#define EMPAREJAMIENTO

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

#include "inscripcion.h"

void mezclar_equipos() {
    srand(time(NULL));
    for (int i = total_equipos - 1; i > 0; i--) {
        int j = rand() % (i + 1);
        Equipo temp = equipos[i];
        equipos[i] = equipos[j];
        equipos[j] = temp;
    }
}
// Genera los emparejamientos de la primera fase
void primera_fase() {
    if (total_equipos < 2) {
        printf("No hay suficientes equipos para organizar partidos.\n");
        return;
    }

    mezclar_equipos();
    printf("\nCalendario de la Primera Fase:\n");
    for (int i = 0; i < total_equipos - 1; i += 2) {
        printf("%s vs %s - Fecha: %d/%d/%d - Hora: %02d:00\n", 
               equipos[i].nombre, equipos[i + 1].nombre, 
               rand() % 30 + 1, rand() % 12 + 1, 2025, rand() % 10 + 14);
    }
    
    if (total_equipos % 2 != 0) {
        printf("%s descansa esta ronda.\n", equipos[total_equipos - 1].nombre);
    }
}

// Función de comparación para ordenar equipos por puntos (mayor a menor)
int comparar_puntos(const void *a, const void *b) {
    return ((Equipo*)b)->puntos - ((Equipo*)a)->puntos;
}

// Emparejar equipos en la segunda fase según puntos
void segunda_fase() {
    if (total_equipos < 2) {
        printf("No hay suficientes equipos para organizar partidos.\n");
        return;
    }
    
    qsort(equipos, total_equipos, sizeof(Equipo), comparar_puntos);
    
    printf("\nCalendario de la Segunda Fase:\n");
    for (int i = 0; i < total_equipos - 1; i += 2) {
        printf("%s (%d pts) vs %s (%d pts) - Fecha: %d/%d/%d - Hora: %02d:00\n", 
               equipos[i].nombre, equipos[i].puntos, 
               equipos[i + 1].nombre, equipos[i + 1].puntos, 
               rand() % 30 + 1, rand() % 12 + 1, 2025, rand() % 10 + 14);
    }
    
    if (total_equipos % 2 != 0) {
        printf("%s descansa esta ronda.\n", equipos[total_equipos - 1].nombre);
    }
}

int calendario(){
	int op;
	
	do{	
		mezclar_equipos();
		primera_fase();
		
		if(equipos.total_goles<0){
			printf("Aun no puedes pasar a la fase 2");
			return 1;
		}else{
			segunda_fase();
			return 1;
		}
		
	}while(1);
	
return 0;
}

#endif
